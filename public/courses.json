{
  "degrees": [{
    "universityName" : "University of Cape Town",
    "startYear": "2022",
    "endYear": "2024",
    "type": "BSc",
    "degreeName": "Computer Science and Applied Statistics",
    "courses": [
      {"year": 1, "courseName": "MAM1004F", "shortDescription": "Algebra and calculus, with an emphasis on application", "longDescription": "The course provides mathematics for applications, particularly in the Life and Earth sciences. Syllabus: Functions and graphs. Straight lines, power functions, polynomials, exponential and logarithmic functions, trigonometric functions (radians). Discrete-time dynamical systems. Stability and equilibria. Rates of change. Limits, derivatives. Maxima and minima. Concavity. Asymptotes and curve sketching. Newton's Method. Taylor Polynomials. Antiderivatives and integrals. Mathematical modelling. Separable and linear differential equations."},
      {"year": 1, "courseName" : "ECO1010F", "shortDescription": "Introductory microeconomics course", "longDescription": "This course focuses on the processes involved in mobilising resources and meeting the public's needs. It begins with market mechanisms and price formation. The background to demand (cardinal and ordinal utility) follow. The neo-classical theory of supply is then introduced, leading from production function analysis to the derivation of supply under perfect competition. Other market forms follow, and the course concludes with sections on factor pricing and international trade."},
      {"year": 1, "courseName" : "CSC1015F", "shortDescription": "Introduction to Python", "longDescription": "This course is an introduction to problem solving, algorithm development and programming in the Python language. It includes fundamental programming constructs and abstractions, sorting and searching techniques, and machine representations of data. The practical component covers input/output, conditionals, loops, strings, functions, arrays, lists, dictionaries, recursion, text files and exceptions in Python. Students are taught testing and debugging, as well as sorting and searching algorithms, algorithm complexity and equivalence classes. Number systems, binary arithmetic, Boolean algebra and logic gates are also introduced."},
      {"year": 1, "courseName": "PHI1024F", "shortDescription": "Introduction to philosophy", "longDescription": "This course is an introduction to philosophy that aims to make students more conscious, creative and critical in thinking about their own fundamental beliefs and values. Topics may include: the nature of selves and persons; the relationship between mind and body; whether life after death is possible; whether we have free will; the existence of God; and the nature and possibility of knowledge."}
    ]
  }],

  "specializations": [{
    "specializationName" : "Mathematics for Machine Learning Specialization",
    "organization" : "Imperial College of London",
    "courses":  [
      {"courseName": "Linear Algebra", "shortDescription": "Covers the essentials of linear algebra as it relates to machine learning", "longDescription": "\"In this course on Linear Algebra we look at what linear algebra is and how it relates to vectors and matrices. Then we look through what vectors and matrices are and how to work with them, including the knotty problem of eigenvalues and eigenvectors, and how to use these to solve problems. Finally  we look at how to use these to do fun things with datasets - like how to rotate images of faces and how to extract eigenvectors to look at how the Pagerank algorithm works.\n\nSince we're aiming at data-driven applications, we'll be implementing some of these ideas in code, not just on pencil and paper. Towards the end of the course, you'll write code blocks and encounter Jupyter notebooks in Python, but don't worry, these will be quite short, focussed on the concepts, and will guide you through if you’ve not coded before.\n\nAt the end of this course you will have an intuitive understanding of vectors and matrices that will help you bridge the gap into linear algebra problems, and how to apply these concepts to machine learning.\""},

      {"courseName": "Multivariate Calculus", "shortDescription": "Covers the basics of multivariate calculus for machine learning", "longDescription": "\"This course offers a brief introduction to the multivariate calculus required to build many common machine learning techniques. We start at the very beginning with a refresher on the “rise over run” formulation of a slope, before converting this to the formal definition of the gradient of a function. We then start to build up a set of tools for making calculus easier and faster. Next, we learn how to calculate vectors that point up hill on multidimensional surfaces and even put this into action using an interactive game. We take a look at how we can use calculus to build approximations to functions, as well as helping us to quantify how accurate we should expect those approximations to be. We also spend some time talking about where calculus comes up in the training of neural networks, before finally showing you how it is applied in linear regression models. This course is intended to offer an intuitive understanding of calculus, as well as the language necessary to look concepts up yourselves when you get stuck. Hopefully, without going into too much detail, you’ll still come away with the confidence to dive into some more focused machine learning courses in future.\""}]
  }]
}